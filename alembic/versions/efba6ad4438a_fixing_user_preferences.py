"""fixing user preferences

Revision ID: efba6ad4438a
Revises: f863a24f25c7
Create Date: 2024-05-20 14:10:38.743194

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "efba6ad4438a"
down_revision: Union[str, None] = "f863a24f25c7"
branch_labels: Union[str, Sequence[str], None] = (
    None
)
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "preferences",
        sa.Column(
            "user_telegram_id",
            sa.BigInteger(),
            nullable=False,
        ),
    )
    op.create_unique_constraint(
        None, "preferences", ["user_telegram_id"]
    )
    op.drop_constraint(
        "preferences_profile_id_fkey",
        "preferences",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "preferences",
        "profiles",
        ["user_telegram_id"],
        ["user_telegram_id"],
        ondelete="CASCADE",
    )
    op.drop_column("preferences", "profile_id")
    op.drop_constraint(
        "profiles_preferences_id_key",
        "profiles",
        type_="unique",
    )
    op.drop_constraint(
        "profiles_preferences_id_fkey",
        "profiles",
        type_="foreignkey",
    )
    op.drop_column("profiles", "preferences_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "profiles",
        sa.Column(
            "preferences_id",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.create_foreign_key(
        "profiles_preferences_id_fkey",
        "profiles",
        "preferences",
        ["preferences_id"],
        ["id"],
    )
    op.create_unique_constraint(
        "profiles_preferences_id_key",
        "profiles",
        ["preferences_id"],
    )
    op.add_column(
        "preferences",
        sa.Column(
            "profile_id",
            sa.BIGINT(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(
        None, "preferences", type_="foreignkey"
    )
    op.create_foreign_key(
        "preferences_profile_id_fkey",
        "preferences",
        "profiles",
        ["profile_id"],
        ["user_telegram_id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(
        None, "preferences", type_="unique"
    )
    op.drop_column(
        "preferences", "user_telegram_id"
    )
    # ### end Alembic commands ###
